<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[I'm Jess]]></title>
  <link href="http://jessyangyang.github.io/atom.xml" rel="self"/>
  <link href="http://jessyangyang.github.io/"/>
  <updated>2014-03-18T11:16:52+08:00</updated>
  <id>http://jessyangyang.github.io/</id>
  <author>
    <name><![CDATA[jessyangyang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Octopress搭建博客]]></title>
    <link href="http://jessyangyang.github.io/blog/2014/03/17/shi-yong-octopressda-jian-bo-ke/"/>
    <updated>2014-03-17T13:46:40+08:00</updated>
    <id>http://jessyangyang.github.io/blog/2014/03/17/shi-yong-octopressda-jian-bo-ke</id>
    <content type="html"><![CDATA[<p><img src="http://www.logomoose.com/wp-content/uploads/2008/11/octopress.jpg"></p>

<p>援引 <a href="http://octopress.org/">Octopress</a> 官网的副标题，<code>Octopress is a blogging framework for hackers</code>。简而言之 Octopress 是基于 <a href="http://github.com/mojombo/jekyll">Jekyll</a> 的静态 Blog 生成和部署的框架/解决方案。你现在看到的我的 Blog 就是用 Octopress 搭建的。</p>

<h2>目录：</h2>

<blockquote><ol>
<li>各种系统环境中安装

<ul>
<li>在Mac OS下安装</li>
<li>在Windows下安装</li>
</ul>
</li>
<li>部署在第三方服务器

<ul>
<li>部署到Github Pages</li>
<li><a href="http://www.imallen.com/blog/2013/10/16/deploying-octopress-to-qiniu.html">部署到七牛云服务器</a></li>
</ul>
</li>
<li>配置和使用 Octopress</li>
<li>域名解析</li>
<li>配置功能插件 （主题、评论、社交、etc&hellip;）</li>
<li>更多</li>
<li>小结</li>
</ol>
</blockquote>

<hr />

<h2>各种系统环境中安装</h2>

<p>由于Linux 和 Mac OS安装步骤一致，所以Liunx用户参照Mac OS步骤。</p>

<h3>在 Mac OS下安装</h3>

<h3>1. 安装Ruby</h3>

<p>Octopress需要Ruby环境，RVM(Ruby Version Manager)负责安装和管理Ruby的环境。所以我们先在终端输入如下命令，来安装RVM：</p>

<p><code>curl -L https://get.rvm.io | bash -s stable --ruby</code></p>

<p>接着是安装Ruby 1.9.3，在终端依次运行如下命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm install 1.9.3
</span><span class='line'>rvm use 1.9.3
</span><span class='line'>rvm rubygems latest</span></code></pre></td></tr></table></div></figure>


<p>完成上面的操作之后，运行ruby &mdash;version应该可以看到ruby 1.9.3环境已经安装好了。</p>

<p>参考：<a href="http://octopress.org/docs/setup/rvm/">Installing Ruby With RVM</a></p>

<h3>2. 安装 Octopress</h3>

<p>在安装 Octopress 之前，请确保你的电脑上已经安装有git了，在终端输入<code>git --version</code>，应该可以看到电脑中的git版本(我电脑上输出:<code>git version 1.7.12.4 (Apple Git-37)</code>)，如果没有显示相关内容，请先安装git。
git安装之后，利用git命令将 octopress 从github上clone到本机，如下命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress    # If you use RVM, You'll be asked if you trust the .rvmrc file (say yes).
</span><span class='line'>ruby --version  # Should report Ruby 1.9.3</span></code></pre></td></tr></table></div></figure>


<p>接着安装相关依赖项：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>rbenv rehash    # If you use rbenv, rehash to be able to run the bundle command
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<p>最后安装默认的Octopress 主题。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<p>参考： <a href="http://octopress.org/docs/setup/">Octopress Setup</a></p>

<h2>在Windows下安装</h2>

<p>本文主要介绍在 Windows 7 下的安装 Octopress</p>

<h3>1. 在 Windows 7 下安装必要的软件</h3>

<ul>
<li>Octopress 在 git 中维护，需要安装 git

<ul>
<li>到 <a href="http://code.google.com/p/msysgit/downloads/list">msysgit</a> 查找下载最新版本</li>
<li>当前的最新版本 <code>Git-1.7.9-preview20120201.exe</code>，下载后直接安装</li>
</ul>
</li>
<li>Octopress/Jekyll 是 ruby 应用程序，需要安装 ruby

<ul>
<li>到 <a href="http://rubyforge.org/frs/?group_id=167">RailsInstaller</a> 查找下载最新版本</li>
<li>Octopress 要求安装 <a href="http://rubyforge.org/frs/download.php/75127/rubyinstaller-1.9.2-p290.exe">rubyinstaller-1.9.2-p290</a>

<ul>
<li>Jekyll 要求安装 <a href="http://rubyforge.org/frs/download.php/72075/rubyinstaller-1.9.1-p430.exe">rubyinstaller-1.9.1-p430</a></li>
</ul>
</li>
<li>安装后，确保 <code>C:\Ruby192\bin</code> 在 Windows 当前用户的 PATH 环境变量中</li>
</ul>
</li>
<li>ruby 的模块工具 gem 在生成本地模块时可能需要用到编译环境

<ul>
<li>有两种选择 <a href="http://www.mingw.org/">MinGW and MSYS</a> 或 <a href="https://github.com/oneclick/rubyinstaller/wiki/development-kit">RubyInstaller DevKit</a></li>
<li>本文选择 RubyInstaller 推荐的 RubyInstaller DevKit</li>
<li>下载 <a href="https://github.com/oneclick/rubyinstaller/wiki/development-kit">RubyInstaller DevKit</a></li>
<li>安装需执行如下步骤

<ul>
<li>将 DevKit 自解压包释放到 <code>C:\DevKit</code></li>
<li>在 Windows CMD 窗口中执行 <code>ruby dk.rb init</code></li>
<li>在 Windows CMD 窗口中执行 <code>ruby dk.rb install</code></li>
</ul>
</li>
</ul>
</li>
<li>jekyll/Octopress 使用 Python 编写的代码加亮系统 pygments，需要安装 python（可选）

<ul>
<li>到 <a href="http://www.activestate.com/activepython">ActiveState</a> 下载 最新的 ActivePython-2.7 版</li>
<li>执行安装程序</li>
<li>在 Windows CMD 窗口中执行 <code>easy_install pygments</code></li>
</ul>
</li>
</ul>


<h3>2. 软件安装后的 Windows 7 环境说明和配置</h3>

<ul>
<li>两种命令行环境

<ul>
<li>Windows 7 自己的 CMD窗口，用于输入 DOS 类命令</li>
<li>MINGW/Git Bash 窗口启动了 <code>bash</code>，可以输入 Linux 类命令</li>
</ul>
</li>
<li>环境变量

<ul>
<li>在 Windows 的 “高级系统设置” 中设置的 环境变量 可以被 MINGW 窗口继承

<ul>
<li> 设置 <code>LANG</code> 和 <code>LC_ALL</code> 两个环境变量，其值均设置为 <code>zh_CN.UTF-8</code></li>
<li> 在 CMD 窗口中测试： <code>echo %LANG% %LC_ALL%</code></li>
<li> 在 MINGW 窗口中测试： <code>echo $LANG $LC_ALL</code></li>
</ul>
</li>
<li>MINGW/Git Bash 窗口启动了 <code>bash</code>，可以使用 <code>~/.bash_profile</code> 环境设置文件设置环境变量、命令别名等</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ echo "export LANG LC_ALL" &gt; ~/.bash_profile
</span><span class='line'>$ echo "alias ll='ls -l --color=tty'" &gt;&gt; ~/.bash_profile
</span><span class='line'>$ echo "alias ls='ls --color=tty'" &gt;&gt; ~/.bash_profile</span></code></pre></td></tr></table></div></figure>


<p>注意：若希望<code>~/.bash_profile</code>中的设置生效，请启动 MINGW/Git Bash 窗口，而不是Windows 的 CMD窗口</p>

<h3>3. ruby 环境的初始配置</h3>

<p>设置 gem 的更新源</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem sources --remove http://rubygems.org/
</span><span class='line'>gem sources -a http://ruby.taobao.org/
</span><span class='line'>gem sources -l # 请确保只有 http://ruby.taobao.org 一行输出</span></code></pre></td></tr></table></div></figure>


<p>安装 rdoc 和 bundler
<code>gem install rdoc bundler</code></p>

<h3>安装 Octopress</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 1. 克隆 Octopress
</span><span class='line'>$ mkdir ~/repos
</span><span class='line'>$ cd ~/repos
</span><span class='line'>$ git clone git://github.com/imathis/octopress.git sinosmond.github.com
</span><span class='line'>$ cd ~/repos/sinomsond.github.com
</span><span class='line'># 2. 修改 Octopress 的 GEM 源
</span><span class='line'>$ vi Gemfile    # 或 notepad Gemfile
</span><span class='line'>将行 ： source "http://rubygems.org/"
</span><span class='line'>改为 ： source "http://ruby.taobao.org/"
</span><span class='line'># 3. 安装 Octopress 所需的GEM组件
</span><span class='line'>$ bundle install</span></code></pre></td></tr></table></div></figure>


<h3>生成 Octopress 的模版文件</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake install
</span><span class='line'>rake aborted!
</span><span class='line'>You have already activated rake 0.9.2.2, but your Gemfile requires rake 0.9.2.
</span><span class='line'>Using bundle exec may solve this.
</span><span class='line'>
</span><span class='line'>(See full trace by running task with --trace)</span></code></pre></td></tr></table></div></figure>


<h3>解决方法</h3>

<ol>
<li><code>$ bundle update; rake install</code></li>
<li>调整 rake</li>
<li>在 WINDOWS 的 CMD 窗口里：修改 <code>rake.bat</code> 文件</li>
<li>在 <code>GIT BASH</code> 里：设置别名</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ echo "alias rake='bundle exec rake'" &gt;&gt; ~/.bash_profile
</span><span class='line'>$ . ~/.bash_profile
</span><span class='line'>$ alias
</span><span class='line'>alias rake='bundle exec rake'
</span><span class='line'>$ rake install</span></code></pre></td></tr></table></div></figure>


<h3>设置本地仓库和远程仓库的关联</h3>

<ul>
<li>创建 github 账号和仓库

<ul>
<li>下面的操作假定您注册了 <code>&lt;USERNAME&gt;</code> 的账号</li>
<li>下面的操作假定您创建了 <code>&lt;USERNAME&gt;.github.com</code> 的仓库</li>
<li>本例使用 <code>sinosmond.github.com</code>，请用 <code>&lt;USERNAME&gt;.github.com</code> 替换之</li>
</ul>
</li>
<li>在本地版本库中设置远程版本库的别名
<code>$ git remote add myblog git@github.com:sinosmond/sinosmond.github.com.git</code></li>
</ul>


<h2>配置和使用 Octopress</h2>

<h3>Octopress 的基本配置</h3>

<p>Octopress 的作者已经尽量让配置简化了。大多数情况下只需要配置<code>_config.yml</code>和<code>Rakefile</code>文件即可。其中<code>Rakefile</code>是跟博客部署相关，一般情况下并不需要修改这个文件，除非使用了<code>rsync</code>。
<code>config.yml</code>是博客重要的一个配置文件，在<code>config.yml</code>文件中有三大配置项：<code>Main Configs</code>、<code>Jekyll &amp; Plugins</code>和<code>3rd Party Settings</code>。
一般，该文件中其中url是必须要填写的，这里的url是在github上创建的一个仓库地址，具体请看第四步中创建的地址。另外再修改一下title、subtitle和author，根据需求，在开启一些第三方组件服务。
关于<code>_config.yml</code>文件中的更多内容，请看这里的内容：<a href="http://octopress.org/docs/configuring/">Configuring Octopress</a>
若文件中包括中文，则存成 UTF-8 编码格式</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ----------------------- #
</span><span class='line'>#      Main Configs       #
</span><span class='line'># ----------------------- #
</span><span class='line'>url:                # For rewriting urls for RSS, etc
</span><span class='line'>title:              # Used in the header and title tags
</span><span class='line'>subtitle:           # A description used in the header
</span><span class='line'>author:             # Your name, for RSS, Copyright, Metadata
</span><span class='line'>simple_search:      # Search engine for simple site search
</span><span class='line'>description:        # A default meta description for your site
</span><span class='line'>subscribe_rss:      # Url for your blog's feed, defauts to /atom.xml
</span><span class='line'>subscribe_email:    # Url to subscribe by email (service required)
</span><span class='line'>email:              # Email address for the RSS feed if you want it.</span></code></pre></td></tr></table></div></figure>


<p>建议：最好把里面的<code>twitter</code>相关的信息全部删掉，否则由于GFW的原因，将会造成页面load很慢。同理，修改定制文件<code>/source/_includes/custom/head.html</code> 把google的自定义字体去掉。from<a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">唐巧的博文中—配置</a>。</p>

<h3>开始写博客</h3>

<p>Octopress为我们提供了一些task来创建博文和页面。博文必须存储在 <code>source/_posts</code> 目录下，并且需要按照Jekyll的命名规范对文章进行命名：<code>YYYY-MM-DD-post-title.markdown</code>。文章的名字会被当做url的一部分，而其中的日期用于对博文的区分和排序。</p>

<p>通过Octopress提供的task可以正确的按照命名规范创建一个博文，并且在博文中会附带常用的一些yaml元数据。只需要在终端输入如下命令：
<code>rake new_post["title"]</code></p>

<p>其中title为博文的文件名，创建出来的文件默认是markdown格式。上面的命令会创建出这样一个文件：<code>source/_posts/2013-08-03-title.markdown</code>。打开这个文件，可以看到里面有如下一些内容了(告诉Jekyll博客引擎如何处理博文和页面)：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "title"
</span><span class='line'>date: 2013-08-03 16:36
</span><span class='line'>comments: true
</span><span class='line'>categories: 
</span><span class='line'>---</span></code></pre></td></tr></table></div></figure>


<p>接着我们就可以在这个文件中写我们的博文啦。完成之后，我们可以预览和部署博文。下面是创建并部署博文的一个完整过程：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake new_post["New Post"] //生成博文框架，然后修改生成的文件即可
</span><span class='line'>$ rake generate // 生成静态文件
</span><span class='line'>$ git add .
</span><span class='line'>$ git commit -am "Some comment here." 
</span><span class='line'>$ git push origin source
</span><span class='line'>$ rake watch // 检测文件变化，实时生成新内容
</span><span class='line'>$ rake preview // 在本机4000端口生成访问内容
</span><span class='line'>$ rake deploy // 发布文件</span></code></pre></td></tr></table></div></figure>


<p>参考：<a href="http://octopress.org/docs/blogging/">Blogging Basics</a></p>

<h2>域名解析</h2>

<p>我们可以给GitHub上的page指定一个域名，具体做法如下2个步骤</p>

<ol>
<li><p>给repo配置域名
在source根目录下新建一个名为<code>CNAME</code>的文件，并把你的域名填写进去，例如<code>beyondvincent.com</code>。这样做的目的是告诉GitHub服务器开始将<code>repo</code>中的page(例如<code>beyondvincent.github.io</code>)指向到某个域名中。</p></li>
<li><p>配置DNS(我的域名是在godaddy上购买的)
添加一条A记录： <code>@ 204.232.175.78</code> 在CNAME中添加一条记录： <code>http beyondvincent.github.com</code></p></li>
</ol>


<h2>配置功能插件</h2>

<hr />

<h2>参考</h2>

<ul>
<li><a href="http://beyondvincent.com/blog/2013/08/03/108-creating-a-github-blog-using-octopress/">http://beyondvincent.com/blog/2013/08/03/108-creating-a-github-blog-using-octopress/</a></li>
<li><a href="http://www.imallen.com/blog/2013/10/16/deploying-octopress-to-qiniu.html">http://www.imallen.com/blog/2013/10/16/deploying-octopress-to-qiniu.html</a></li>
<li><a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/</a></li>
<li><a href="http://sinosmond.github.io/blog/2012/03/12/install-and-deploy-octopress-to-github-on-windows7-from-scratch/">http://sinosmond.github.io/blog/2012/03/12/install-and-deploy-octopress-to-github-on-windows7-from-scratch/</a></li>
<li><a href="http://octopress.org/">http://octopress.org/</a></li>
<li><a href="http://www.ituring.com.cn/article/23">http://www.ituring.com.cn/article/23</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World!]]></title>
    <link href="http://jessyangyang.github.io/blog/2014/03/17/hello-world/"/>
    <updated>2014-03-17T09:42:42+08:00</updated>
    <id>http://jessyangyang.github.io/blog/2014/03/17/hello-world</id>
    <content type="html"><![CDATA[<p>一直想开个私人博客，随便唠叨唠叨，顺便提升下写作水平。</p>

<p>之前基于鸟叔 <a href="http://www.laruence.com/manual/">Yaf PHP Framework</a> 写过一个小的<code>CMS</code>，但是感觉还是有些臃肿，不够简洁。然后我想剥离出来直接JS生成，又得自个写<code>Theme</code>。哎，找了一些开源的<code>PHP MAKEDOWN BLOG</code>，还是太麻烦。</p>

<p>最终选择了 <a href="http://octopress.org/">Octopress</a> 也是因为不用部署在服务器上，而且采用 <a href="https://github.com/fabpot/Twig/">Twig</a> 模板引擎也方便移植。</p>

<p>但是在CentOS配置了很久没成功只是因为 Github Pages 用使用github帐号的用户名，没仔细看啊，费了大半天时间调试。</p>

<p>也不知道说什么，先到这。。</p>
]]></content>
  </entry>
  
</feed>
